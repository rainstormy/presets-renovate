{
	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
	"extends": [
		":pinAllExceptPeerDependencies",
		":ignoreModulesAndTests",
		"customManagers:biomeVersions",
		"replacements:all",
		"workarounds:all"
	],
	"dependencyDashboard": true,
	//
	// Use pull request labels to make them easier to discover and manage.
	// Suggested label descriptions:
	// - `dependencies`: Upgrades third-party dependencies.
	// - `suspended`: Something is holding back the dependency upgrade.
	"addLabels": ["dependencies"],
	"stopUpdatingLabel": "suspended",
	//
	// Make commit messages pretty and human-friendly.
	// Discard the 'v' prefix from the version number.
	// Use the verb 'upgrade' instead of 'update'. Unlike 'update', the verb 'upgrade' has a counterpart in 'downgrade'.
	// In Homebrew, APT, and Yarn, the term 'upgrade' means installing new versions of packages while 'update' means refreshing the package index.
	// npm and pnpm use both terms interchangeably.
	// language=handlebars
	"commitMessageAction": "Upgrade",
	// language=handlebars
	"commitMessageExtra": "to {{{replace '^v' '' newVersion}}}",
	// language=handlebars
	"commitMessageSuffix": "",
	//
	// https://docs.renovatebot.com/modules/manager/regex
	"customManagers": [
		{
			// Support upgrading remote Lefthook configurations in YAML files.
			// https://lefthook.dev/configuration/index.html
			// https://lefthook.dev/configuration/remotes.html
			"customType": "regex",
			"datasourceTemplate": "github-tags",
			"managerFilePatterns": [
				"lefthook.{yml,yaml}",
				"lefthook-local.{yml,yaml}",
				".lefthook.{yml,yaml}",
				".lefthook-local.{yml,yaml}",
				".config/lefthook.{yml,yaml}",
				".config/lefthook-local.{yml,yaml}"
			],
			// language=jsregexp
			"matchStrings": [
				"git_url:\\s*(git@github\\.com:|https://github\\.com/)(?<depName>[A-Za-z0-9-]+/[A-Za-z0-9_.-]+)",
				"ref:\\s*(?<currentValue>\\S+)"
			],
			"matchStringsStrategy": "combination"
		},
		{
			// Support upgrading the minimum required version of mise-en-place.
			// https://mise.jdx.dev/configuration.html
			"customType": "regex",
			"datasourceTemplate": "github-tags",
			"depNameTemplate": "jdx/mise",
			"managerFilePatterns": [
				"mise.*.toml",
				"mise.toml",
				"mise/config.toml",
				".mise.*.toml",
				".mise.toml",
				".mise/config.toml",
				".config/mise.toml",
				".config/mise/config.toml"
			],
			// language=jsregexp
			"matchStrings": ["min_version\\s*=\\s*['\"](?<currentValue>\\S+)['\"]"],
			"matchStringsStrategy": "combination"
		}
	],
	//
	// Prefer commit messages referring to dependencies by their human name instead of their identifier (e.g. npm package name).
	// Expand this list as needed.
	//
	// Use groups to upgrade multiple dependencies in a single pull request.
	// All dependencies in a group must be released in sync, i.e. have the same version number.
	// Note that Renovate only recognises a group when a pull request needs to upgrade more than one dependency.
	// If the user has installed only a single dependency in a group, Renovate will not recognise the group.
	// Thus, we need to specify both `commitMessageTopic` and `groupName` for commit messages, and `branchTopic` and `groupSlug` for branch names.
	"packageRules": [
		{
			"matchDepNames": ["*"],
			// language=handlebars
			"commitMessageTopic": "`{{depName}}`"
		},
		{
			"matchManagers": ["dockerfile", "docker-compose"],
			// language=handlebars
			"commitMessageTopic": "`{{depName}}` in Docker",
			"pinDigests": true
		},
		{
			"matchManagers": ["github-actions"],
			// language=handlebars
			"commitMessageTopic": "`{{depName}}` in GitHub Actions",
			"pinDigests": true
		},
		{
			"matchManagers": ["terraform"],
			// language=handlebars
			"commitMessageTopic": "`{{depName}}` in Terraform",
			"pinDigests": false
		},
		{
			"matchManagers": ["npm"],
			"minimumReleaseAge": "3 days"
		},
		{
			"commitMessageTopic": "Ansis",
			"matchDepNames": ["ansis"]
		},
		{
			"commitMessageTopic": "Astro",
			"matchDepNames": ["astro"]
		},
		{
			"commitMessageTopic": "Autoprefixer",
			"matchDepNames": ["autoprefixer"]
		},
		{
			// language=handlebars
			"branchTopic": "biome-{{newMajor}}.x",
			"commitMessageTopic": "Biome",
			"matchDepNames": ["@biomejs/biome"],
			"minimumReleaseAge": "0"
		},
		{
			// language=handlebars
			"branchTopic": "biome-presets-{{newMajor}}.x",
			"commitMessageTopic": "the Biome presets",
			"matchDepNames": ["@rainstormy/presets-biome"]
		},
		{
			"commitMessageTopic": "the Chromatic CLI",
			"matchDepNames": ["chromatic"]
		},
		{
			"commitMessageTopic": "ESLint",
			"matchDepNames": ["eslint"]
		},
		{
			"commitMessageTopic": "Headless UI",
			"matchDepNames": ["@headlessui/react"]
		},
		{
			"commitMessageTopic": "HLS.js",
			"matchDepNames": ["hls.js"]
		},
		{
			"commitMessageTopic": "Howler",
			"matchDepNames": ["howler"]
		},
		{
			"commitMessageTopic": "Jest",
			"matchDepNames": ["jest"]
		},
		{
			"commitMessageTopic": "Lefthook",
			"matchDepNames": ["lefthook"]
		},
		{
			"commitMessageTopic": "the Lefthook presets",
			"matchDepNames": ["rainstormy/presets-lefthook"]
		},
		{
			"commitMessageTopic": "Mentoss",
			"matchDepNames": ["mentoss"]
		},
		{
			"commitMessageTopic": "mise-en-place",
			"matchDepNames": ["jdx/mise"],
			//
			// Currently, mise-en-place has a very frequent release cadence.
			// Its versioning scheme is date-based instead of SemVer.
			// Upgrading only to major and minor versions results in a monthly upgrade.
			// language=jsregexp
			"allowedVersions": "/\\d+\\.\\d+\\.0/",
			"rangeStrategy": "replace"
		},
		{
			"commitMessageTopic": "Mock Service Worker",
			"matchDepNames": ["msw"]
		},
		{
			// language=handlebars
			"groupSlug": "next-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "next-{{newMajor}}.x",
			"groupName": "Next.js",
			"commitMessageTopic": "Next.js",
			"matchDepNames": ["@next/**", "next"]
		},
		{
			// language=handlebars
			"groupSlug": "node-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "node-{{newMajor}}.x",
			"groupName": "Node.js",
			"commitMessageTopic": "Node.js",
			"matchDepNames": ["node"]
		},
		{
			// language=handlebars
			"groupSlug": "playwright-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "playwright-{{newMajor}}.x",
			"groupName": "Playwright",
			"commitMessageTopic": "Playwright",
			"matchDepNames": [
				"@playwright/**",
				"playwright",
				"playwright-chromium",
				"playwright-core",
				"playwright-firefox",
				"playwright-webkit",
				"!@playwright/mcp"
			]
		},
		{
			"commitMessageTopic": "pnpm",
			"matchDepNames": ["pnpm"]
		},
		{
			"commitMessageTopic": "PostCSS",
			"matchDepNames": ["postcss"]
		},
		{
			"commitMessageTopic": "Preact",
			"matchDepNames": ["preact"]
		},
		{
			"commitMessageTopic": "Prettier",
			"matchDepNames": ["prettier"]
		},
		{
			// language=handlebars
			"groupSlug": "react-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "react-{{newMajor}}.x",
			"groupName": "React",
			"commitMessageTopic": "React",
			"matchDepNames": ["react", "react-dom"]
		},
		{
			// language=handlebars
			"groupSlug": "react-router-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "react-router-{{newMajor}}.x",
			"groupName": "React Router",
			"commitMessageTopic": "React Router",
			"matchDepNames": ["react-router", "react-router-dom"]
		},
		{
			// language=handlebars
			"groupSlug": "redis-node-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "redis-node-{{newMajor}}.x",
			"groupName": "the Redis client for Node.js",
			"commitMessageTopic": "the Redis client for Node.js",
			"matchDepNames": ["@redis/**", "redis"]
		},
		{
			// language=handlebars
			"groupSlug": "remix-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "remix-{{newMajor}}.x",
			"groupName": "Remix",
			"commitMessageTopic": "Remix",
			"matchDepNames": ["@remix-run/**"]
		},
		{
			// language=handlebars
			"groupSlug": "snowplow-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "snowplow-{{newMajor}}.x",
			"groupName": "Snowplow",
			"commitMessageTopic": "Snowplow",
			"matchDepNames": ["@snowplow/**"]
		},
		{
			"commitMessageTopic": "Solid",
			"matchDepNames": ["solid-js"]
		},
		{
			"commitMessageTopic": "Solid Router",
			"matchDepNames": ["@solidjs/router"]
		},
		{
			"commitMessageTopic": "SolidStart",
			"matchDepNames": ["@solidjs/start"]
		},
		{
			// language=handlebars
			"groupSlug": "storybook-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "storybook-{{newMajor}}.x",
			"groupName": "Storybook",
			"commitMessageTopic": "Storybook",
			"matchDepNames": ["@storybook/**", "storybook"]
		},
		{
			"commitMessageTopic": "SVGO",
			"matchDepNames": ["svgo"]
		},
		{
			// language=handlebars
			"groupSlug": "tailwindcss-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "tailwindcss-{{newMajor}}.x",
			"groupName": "Tailwind CSS",
			"commitMessageTopic": "Tailwind CSS",
			"matchDepNames": [
				"@tailwindcss/browser",
				"@tailwindcss/cli",
				"@tailwindcss/node",
				"@tailwindcss/oxide",
				"@tailwindcss/oxide-*",
				"@tailwindcss/postcss",
				"@tailwindcss/upgrade",
				"@tailwindcss/vite",
				"tailwindcss"
			]
		},
		{
			"commitMessageTopic": "Testcontainers",
			"matchDepNames": ["testcontainers"]
		},
		{
			"groupSlug": "types",
			"branchTopic": "types",
			"groupName": "type definitions",
			"commitMessageTopic": "type definitions",
			"commitMessageExtra": "",
			"matchDepNames": ["@types/**"],
			"matchUpdateTypes": ["minor", "patch"]
		},
		{
			"commitMessageTopic": "TypeScript",
			"matchDepNames": ["typescript"]
		},
		{
			"commitMessageTopic": "the TypeScript presets",
			"matchDepNames": ["@rainstormy/presets-typescript"]
		},
		{
			"commitMessageTopic": "Undici",
			"matchDepNames": ["undici"]
		},
		{
			"commitMessageTopic": "Updraft",
			"matchDepNames": ["@rainstormy/updraft"]
		},
		{
			"commitMessageTopic": "Valibot",
			"matchDepNames": ["valibot"]
		},
		{
			"commitMessageTopic": "Vike",
			"matchDepNames": ["vike"]
		},
		{
			"commitMessageTopic": "Vinxi",
			"matchDepNames": ["vinxi"]
		},
		{
			"commitMessageTopic": "Vite",
			"matchDepNames": ["vite"]
		},
		{
			// language=handlebars
			"groupSlug": "vitest-{{newMajor}}.x",
			// language=handlebars
			"branchTopic": "vitest-{{newMajor}}.x",
			"groupName": "Vitest",
			"commitMessageTopic": "Vitest",
			"matchDepNames": ["@vitest/**", "vitest"]
		},
		{
			"commitMessageTopic": "Vue",
			"matchDepNames": ["vue"]
		},
		{
			"commitMessageTopic": "Vue Router",
			"matchDepNames": ["vue-router"]
		},
		{
			"commitMessageTopic": "the DOM Testing Library",
			"matchDepNames": ["@testing-library/dom"]
		},
		{
			"commitMessageTopic": "the Preact Testing Library",
			"matchDepNames": ["@testing-library/preact"]
		},
		{
			"commitMessageTopic": "the React Testing Library",
			"matchDepNames": ["@testing-library/react"]
		},
		{
			"commitMessageTopic": "the Vue Testing Library",
			"matchDepNames": ["@testing-library/vue"]
		},
		{
			"commitMessageTopic": "Zod",
			"matchDepNames": ["zod"]
		}
	]
}
