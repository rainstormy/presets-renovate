{
	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
	"extends": [
		":pinAllExceptPeerDependencies",
		":ignoreModulesAndTests",
		"customManagers:biomeVersions",
		"replacements:all",
		"workarounds:all"
	],
	"dependencyDashboard": true,

	// Use pull request labels to make them easier to discover and manage.
	// Suggested label descriptions:
	// - `dependencies`: Upgrades third-party dependencies.
	// - `suspended`: Something is holding back the dependency upgrade.
	"addLabels": ["dependencies"],
	"stopUpdatingLabel": "suspended",

	// Make commit messages pretty and human-friendly.
	//
	// Discard the 'v' prefix from the version number.
	//
	// Use the verb 'upgrade' instead of 'update'. Unlike 'update', the verb 'upgrade' has a counterpart in 'downgrade'.
	// In Homebrew, APT, and Yarn, the term 'upgrade' means installing new versions of packages
	// while 'update' means refreshing the package index.
	// npm and pnpm use both terms interchangeably.
	"commitMessageAction": "Upgrade",
	"commitMessageTopic": "{{#if isGroup}}{{{groupName}}}{{else}}`{{depName}}`{{/if}}",
	"commitMessageExtra": "to {{{replace '^v' '' newVersion}}}",
	"commitMessageSuffix": "",

	// https://docs.renovatebot.com/modules/manager/regex
	"customManagers": [
		{
			// Support upgrading remote Lefthook configurations.
			// https://lefthook.dev/configuration/remotes.html
			"customType": "regex",
			"datasourceTemplate": "github-tags",
			// language=JSRegexp
			"fileMatch": ["(^|/)\\.?lefthook(-local)?\\.ya?ml$"],
			// language=JSRegexp
			"matchStrings": [
				"git_url:\\s*(git@github\\.com:|https://github\\.com/)(?<depName>[A-Za-z0-9-]+/[A-Za-z0-9_.-]+)",
				"ref:\\s*(?<currentValue>\\S+)"
			],
			"matchStringsStrategy": "combination"
		},
		{
			// Support upgrading the minimum required version of mise-en-place.
			// https://mise.jdx.dev/configuration.html
			"customType": "regex",
			"datasourceTemplate": "github-tags",
			"depNameTemplate": "jdx/mise",
			// language=JSRegexp
			"fileMatch": ["(^|/)(\\.config/)?mise(\\.local|/config)?\\.toml$"],
			// language=JSRegexp
			"matchStrings": ["min_version\\s*=\\s*['\"](?<currentValue>\\S+)['\"]"],
			"matchStringsStrategy": "combination"
		}
	],

	// Refer to select packages by their actual name instead of their npm package name.
	// Expand this list as needed.
	//
	// For npm dependencies, specify both `commitMessageTopic` and `groupName`
	// to cover the case when only one package in a group needs an upgrade and
	// to make it more convenient to group dependencies in the future.
	"packageRules": [
		{
			"matchDatasources": ["docker"],
			"commitMessageTopic": "`{{depName}}` in Docker",
			"pinDigests": true
		},
		{
			"matchManagers": ["github-actions"],
			"commitMessageTopic": "`{{depName}}` in GitHub Actions",
			"pinDigests": true
		},
		{
			"matchManagers": ["terraform"],
			"commitMessageTopic": "`{{depName}}` in Terraform",
			"pinDigests": false
		},
		{
			"matchDatasources": ["npm"],
			"minimumReleaseAge": "3 days"
		},
		{
			"commitMessageTopic": "Node.js",
			"groupName": "Node.js",
			"matchPackageNames": ["node", "nodejs"]
		},
		{
			"commitMessageTopic": "Ansis",
			"groupName": "Ansis",
			"matchPackageNames": ["ansis"]
		},
		{
			"commitMessageTopic": "Astro",
			"groupName": "Astro",
			"matchPackageNames": ["astro"]
		},
		{
			"commitMessageTopic": "Autoprefixer",
			"groupName": "Autoprefixer",
			"matchPackageNames": ["autoprefixer"]
		},
		{
			"commitMessageTopic": "Biome",
			"groupName": "Biome",
			"matchPackageNames": ["@biomejs/biome"],
			"minimumReleaseAge": "0"
		},
		{
			"commitMessageTopic": "the Biome presets",
			"groupName": "the Biome presets",
			"matchPackageNames": ["@rainstormy/presets-biome"]
		},
		{
			"commitMessageTopic": "the DOM Testing Library",
			"groupName": "the DOM Testing Library",
			"matchPackageNames": ["@testing-library/dom"]
		},
		{
			"commitMessageTopic": "ESLint",
			"groupName": "ESLint",
			"matchPackageNames": ["eslint"]
		},
		{
			"commitMessageTopic": "Headless UI",
			"groupName": "Headless UI",
			"matchPackageNames": ["@headlessui/react", "@headlessui/vue"]
		},
		{
			"commitMessageTopic": "HLS.js",
			"groupName": "HLS.js",
			"matchPackageNames": ["hls.js"]
		},
		{
			"commitMessageTopic": "Howler",
			"groupName": "Howler",
			"matchPackageNames": ["howler"]
		},
		{
			"commitMessageTopic": "Jest",
			"groupName": "Jest",
			"matchPackageNames": ["jest", "jest-environment-jsdom"]
		},
		{
			"commitMessageTopic": "Lefthook",
			"groupName": "Lefthook",
			"matchPackageNames": ["lefthook"]
		},
		{
			"commitMessageTopic": "the Lefthook presets",
			"groupName": "the Lefthook presets",
			"matchDepNames": ["rainstormy/presets-lefthook"]
		},
		{
			"commitMessageTopic": "mise-en-place",
			"groupName": "mise-en-place",
			"matchDepNames": ["jdx/mise"]
		},
		{
			// Currently, mise-en-place has a very frequent release cadence.
			// Its versioning scheme is date-based instead of SemVer.
			// Upgrading only to major and minor versions results in a monthly upgrade.
			"matchDepNames": ["jdx/mise"],
			"matchUpdateTypes": ["patch"],
			"enabled": false
		},
		{
			"commitMessageTopic": "Mock Service Worker",
			"groupName": "Mock Service Worker",
			"matchPackageNames": ["msw"]
		},
		{
			"commitMessageTopic": "Next.js",
			"groupName": "Next.js",
			"matchPackageNames": ["next"]
		},
		{
			"commitMessageTopic": "pnpm",
			"groupName": "pnpm",
			"matchDepNames": ["pnpm"]
		},
		{
			"commitMessageTopic": "PostCSS",
			"groupName": "PostCSS",
			"matchPackageNames": ["postcss"]
		},
		{
			"commitMessageTopic": "Preact",
			"groupName": "Preact",
			"matchPackageNames": ["preact"]
		},
		{
			"commitMessageTopic": "the Preact Testing Library",
			"groupName": "the Preact Testing Library",
			"matchPackageNames": ["@testing-library/preact"]
		},
		{
			"commitMessageTopic": "Prettier",
			"groupName": "Prettier",
			"matchPackageNames": ["prettier"]
		},
		{
			"commitMessageTopic": "React",
			"groupName": "React",
			"matchPackageNames": [
				"react",
				"react-dom",
				"@types/react",
				"@types/react-dom"
			]
		},
		{
			"commitMessageTopic": "React Router",
			"groupName": "React Router",
			"matchPackageNames": ["react-router", "react-router-dom"]
		},
		{
			"commitMessageTopic": "the React Testing Library",
			"groupName": "the React Testing Library",
			"matchPackageNames": ["@testing-library/react"]
		},
		{
			"commitMessageTopic": "the Redis client for Node.js",
			"groupName": "the Redis client for Node.js",
			"matchPackageNames": ["@redis/**", "redis"]
		},
		{
			"commitMessageTopic": "Remix",
			"groupName": "Remix",
			"matchPackageNames": ["@remix-run/**"]
		},
		{
			"commitMessageTopic": "Snowplow",
			"groupName": "Snowplow",
			"matchPackageNames": ["@snowplow/**"]
		},
		{
			"commitMessageTopic": "Solid",
			"groupName": "Solid",
			"matchPackageNames": ["solid-js"]
		},
		{
			"commitMessageTopic": "Solid Router",
			"groupName": "Solid Router",
			"matchPackageNames": ["@solidjs/router"]
		},
		{
			"commitMessageTopic": "SolidStart",
			"groupName": "SolidStart",
			"matchPackageNames": ["@solidjs/start"]
		},
		{
			"commitMessageTopic": "Storybook",
			"groupName": "Storybook",
			"matchPackageNames": ["@storybook/**", "storybook"]
		},
		{
			"commitMessageTopic": "SVGO",
			"groupName": "SVGO",
			"matchPackageNames": ["svgo"]
		},
		{
			"commitMessageTopic": "Tailwind CSS",
			"groupName": "Tailwind CSS",
			"matchPackageNames": ["@tailwindcss/**", "tailwindcss"]
		},
		{
			"commitMessageTopic": "TypeScript",
			"groupName": "TypeScript",
			"matchPackageNames": ["typescript"]
		},
		{
			"commitMessageTopic": "the TypeScript presets",
			"groupName": "the TypeScript presets",
			"matchPackageNames": ["@rainstormy/presets-typescript"]
		},
		{
			"commitMessageTopic": "Undici",
			"groupName": "Undici",
			"matchPackageNames": ["undici"]
		},
		{
			"commitMessageTopic": "Updraft",
			"groupName": "Updraft",
			"matchPackageNames": ["@rainstormy/updraft"]
		},
		{
			"commitMessageTopic": "Valibot",
			"groupName": "Valibot",
			"matchPackageNames": ["valibot"]
		},
		{
			"commitMessageTopic": "Vike",
			"groupName": "Vike",
			"matchPackageNames": ["vike"]
		},
		{
			"commitMessageTopic": "Vinxi",
			"groupName": "Vinxi",
			"matchPackageNames": ["vinxi"]
		},
		{
			"commitMessageTopic": "Vite",
			"groupName": "Vite",
			"matchPackageNames": ["vite"]
		},
		{
			"commitMessageTopic": "Vitest",
			"groupName": "Vitest",
			"matchPackageNames": ["@vitest/**", "vitest"]
		},
		{
			"commitMessageTopic": "Vue",
			"groupName": "Vue",
			"matchPackageNames": ["vue"]
		},
		{
			"commitMessageTopic": "Vue Router",
			"groupName": "Vue Router",
			"matchPackageNames": ["vue-router"]
		},
		{
			"commitMessageTopic": "the Vue Testing Library",
			"groupName": "the Vue Testing Library",
			"matchPackageNames": ["@testing-library/vue"]
		},
		{
			"commitMessageTopic": "Zod",
			"groupName": "Zod",
			"matchPackageNames": ["zod"]
		}
	]
}
